{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SummaryPipe {\n  transform(content, characterLimit) {\n    if (content.length <= characterLimit) {\n      return content;\n    } else {\n      return `${content.substring(0, characterLimit)}...`;\n    }\n  }\n  static #_ = this.ɵfac = function SummaryPipe_Factory(t) {\n    return new (t || SummaryPipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"summary\",\n    type: SummaryPipe,\n    pure: true\n  });\n}","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,WAAW;EAEtBC,SAAS,CAACC,OAAe,EAAEC,cAAsB;IAC/C,IAAID,OAAO,CAACE,MAAM,IAAID,cAAc,EAAE;MACpC,OAAOD,OAAO;KACf,MAAM;MACL,OAAO,GAAGA,OAAO,CAACG,SAAS,CAAC,CAAC,EAAEF,cAAc,CAAC,KAAK;;EAEvD;EAAC;qBARUH,WAAW;EAAA;EAAA;;UAAXA,WAAW;IAAAM;EAAA","names":["SummaryPipe","transform","content","characterLimit","length","substring","pure"],"sourceRoot":"","sources":["C:\\Users\\przem\\Desktop\\BlogLab\\BlogLab-UI\\src\\app\\pipes\\summary.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'summary'\n})\nexport class SummaryPipe implements PipeTransform {\n\n  transform(content: string, characterLimit: number): string {\n    if (content.length <= characterLimit) {\n      return content;\n    } else {\n      return `${content.substring(0, characterLimit)}...`;\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}